sourceCompatibility = 1.6
archivesBaseName = 'spring-profile'

dependencies {

	provided group: 'org.springframework', name: 'spring-core', version: springVersion
	provided group: 'commons-logging', name: 'commons-logging', version: '1.2'

	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: project.findProperty("ossrhUsername"), password: project.findProperty("ossrhPassword"))
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: project.findProperty("ossrhUsername"), password: project.findProperty("ossrhPassword"))
			}

			pom.project {
				name 'Spring Profile Env'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'Use Spring Env Profile without spring boot, only using spring core'
				url 'https://github.com/mageddo/mageddo-projects/tree/master/spring-profile'

				scm {
					connection 'https://github.com/mageddo/mageddo-projects.git'
					developerConnection 'https://github.com/mageddo/mageddo-projects.git'
					url 'https://github.com/mageddo/mageddo-projects/tree/master/spring-profile'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'mageddo'
						name 'Elvis Souza'
						email 'edigitalb@gmail.com'
					}
				}
			}
		}
	}
}
