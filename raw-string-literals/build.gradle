plugins {
	id 'java'
	id 'maven'
}

if(JavaVersion.current() != JavaVersion.VERSION_1_8){
	throw new UnsupportedOperationException("Please use JDK 8 to compile this project")
}

allprojects {
	apply plugin: 'java'
	repositories {
		mavenLocal()
		mavenCentral()
	}
}


def tools = files("${System.properties['java.home']}/lib/tools.jar".replaceAll("/jre", ""))

project(':rsl-compiler'){
	sourceCompatibility = JavaVersion.VERSION_1_7
	targetCompatibility = JavaVersion.VERSION_1_7
	dependencies {
		implementation('org.apache.commons:commons-lang3:3.8.1')
		implementation(project(':rsl'))
		compileOnly tools
	}
}
project(':rsl-compiler-jre7'){
	sourceCompatibility = JavaVersion.VERSION_1_7
	targetCompatibility = JavaVersion.VERSION_1_7
	dependencies {

		implementation('com.github.javaparser:javaparser-core:2.4.0')
		implementation(project(':rsl-compiler'))
		compileOnly tools

		testCompile 'junit:junit:4.12'
		testCompile group: 'net.openhft', name: 'compiler', version: '2.3.4'
		testCompile group: 'org.mdkt.compiler', name: 'InMemoryJavaCompiler', version: '1.3.0'
		testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
		testCompile tools
	}
}

project(':rsl-compiler-jre8'){
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	dependencies {

		implementation('com.github.javaparser:javaparser-core:2.4.0')
		implementation(project(':rsl-compiler'))
		compileOnly tools

		testCompile 'junit:junit:4.12'
		testCompile group: 'net.openhft', name: 'compiler', version: '2.3.4'
		testCompile group: 'org.mdkt.compiler', name: 'InMemoryJavaCompiler', version: '1.3.0'
		testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
		testCompile tools
	}
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

if (project.hasProperty("signing.keyId")) {
	apply plugin: 'signing'
	signing {
		sign configurations.archives
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: project.findProperty("ossrhUsername"), password: project.findProperty("ossrhPassword"))
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: project.findProperty("ossrhUsername"), password: project.findProperty("ossrhPassword"))
			}

			pom.project {
				name project.name
				packaging 'jar'
				description project.description
				url "https://github.com/mageddo/mageddo-projects/tree/master/" + project.name

				scm {
					connection 'https://github.com/mageddo/mageddo-projects.git'
					developerConnection 'https://github.com/mageddo/mageddo-projects.git'
					url "https://github.com/mageddo/mageddo-projects/tree/master/" + project.name
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'mageddo'
						name 'Elvis Souza'
						email 'edigitalb@gmail.com'
					}
				}
			}
		}
	}
}
